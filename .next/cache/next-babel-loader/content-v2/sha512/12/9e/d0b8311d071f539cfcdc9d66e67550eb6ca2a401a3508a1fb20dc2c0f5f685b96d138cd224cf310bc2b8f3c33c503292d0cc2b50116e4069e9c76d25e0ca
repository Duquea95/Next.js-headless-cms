{"ast":null,"code":"import _defineProperty from \"/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport './styles/styles.scss';\nconst httpLink = createHttpLink({\n  uri: 'https://graphql.myshopify.com/api/graphql'\n});\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token': 'dd4d4dc146542ba7763305d71d1b3d38'\n  }\n}));\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  /*#__PURE__*/\n  _jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/pages/_app.js"],"names":["React","ApolloClient","createHttpLink","setContext","InMemoryCache","ApolloProvider","httpLink","uri","middlewareLink","headers","client","link","concat","cache","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAO,sBAAP;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAAEK,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA/B;AAEA,MAAMC,cAAc,GAAGL,UAAU,CAAC,OAAO;AACvCM,EAAAA,OAAO,EAAE;AACP,yCAAqC;AAD9B;AAD8B,CAAP,CAAD,CAAjC;AAMA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,EAAAA,IAAI,EAAEH,cAAc,CAACI,MAAf,CAAsBN,QAAtB,CADwB;AAE9BO,EAAAA,KAAK,EAAE,IAAIT,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,SAASU,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC;AAAA,UAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,MAAxB;AAAA,2BACA,QAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGH;;KAJQF,K;AAMT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport './styles/styles.scss';\n\nconst httpLink = createHttpLink({ uri: 'https://graphql.myshopify.com/api/graphql' })\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token': 'dd4d4dc146542ba7763305d71d1b3d38'\n  }\n}))\n\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\nfunction MyApp({ Component, pageProps }) {\n    <ApolloProvider client={client}>\n    <Component {...pageProps}/>\n    </ApolloProvider>\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}