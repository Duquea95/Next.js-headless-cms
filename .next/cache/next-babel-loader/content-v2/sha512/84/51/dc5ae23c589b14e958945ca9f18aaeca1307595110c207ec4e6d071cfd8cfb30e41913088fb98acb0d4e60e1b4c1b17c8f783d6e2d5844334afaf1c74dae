{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport gql from 'graphql-tag';\nimport { useEffect } from 'react';\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTax\n    subtotalPrice\n    totalPrice\n    lineItems (first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            price\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\nexport const createCheckout = gql`\n  mutation checkoutCreate ($input: CheckoutCreateInput!){\n    checkoutCreate(input: $input) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\nexport const checkoutLineItemsAdd = gql`\n  mutation checkoutLineItemsAdd ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\nexport const checkoutLineItemsUpdate = gql`\n  mutation checkoutLineItemsUpdate ($checkoutId: ID!, $lineItems: [CheckoutLineItemUpdateInput!]!) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\nexport const checkoutLineItemsRemove = gql`\n  mutation checkoutLineItemsRemove ($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\nexport const checkoutCustomerAssociate = gql`\n  mutation checkoutCustomerAssociate($checkoutId: ID!, $customerAccessToken: String!) {\n    checkoutCustomerAssociate(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n      userErrors {\n        field\n        message\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\nexport function useCheckoutEffect(data, key, setDataCallback) {\n  _s();\n\n  useEffect(() => {\n    if (data && data[key] && data[key].checkout) {\n      setDataCallback(data[key].checkout);\n    }\n  }, [data]);\n}\n\n_s(useCheckoutEffect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/pages/checkout.js"],"names":["gql","useEffect","CheckoutFragment","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","useCheckoutEffect","data","key","setDataCallback","checkout"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,gBAAgB,GAAGF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;AA2BA,OAAO,MAAMG,cAAc,GAAGH,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,gBAAiB;AACrB,CAbO;AAeP,OAAO,MAAME,oBAAoB,GAAGJ,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,gBAAiB;AACrB,CAbO;AAeP,OAAO,MAAMG,uBAAuB,GAAGL,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,gBAAiB;AACrB,CAbO;AAeP,OAAO,MAAMI,uBAAuB,GAAGN,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,gBAAiB;AACrB,CAbO;AAeP,OAAO,MAAMK,yBAAyB,GAAGP,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,gBAAiB;AACrB,CAbO;AAeP,OAAO,SAASM,iBAAT,CAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,eAAtC,EAAuD;AAAA;;AAC5DV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGQ,IAAI,IAAIA,IAAI,CAACC,GAAD,CAAZ,IAAqBD,IAAI,CAACC,GAAD,CAAJ,CAAUE,QAAlC,EAA4C;AAC1CD,MAAAA,eAAe,CAACF,IAAI,CAACC,GAAD,CAAJ,CAAUE,QAAX,CAAf;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;AAKD;;GANeD,iB","sourcesContent":["import gql from 'graphql-tag';\nimport { useEffect } from 'react';\n\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTax\n    subtotalPrice\n    totalPrice\n    lineItems (first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            price\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const createCheckout = gql`\n  mutation checkoutCreate ($input: CheckoutCreateInput!){\n    checkoutCreate(input: $input) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsAdd = gql`\n  mutation checkoutLineItemsAdd ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsUpdate = gql`\n  mutation checkoutLineItemsUpdate ($checkoutId: ID!, $lineItems: [CheckoutLineItemUpdateInput!]!) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsRemove = gql`\n  mutation checkoutLineItemsRemove ($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutCustomerAssociate = gql`\n  mutation checkoutCustomerAssociate($checkoutId: ID!, $customerAccessToken: String!) {\n    checkoutCustomerAssociate(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n      userErrors {\n        field\n        message\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport function useCheckoutEffect(data, key, setDataCallback) {\n  useEffect(() => {\n    if(data && data[key] && data[key].checkout) {\n      setDataCallback(data[key].checkout);\n    }\n  }, [data])\n}\n"]},"metadata":{},"sourceType":"module"}