{"ast":null,"code":"import _defineProperty from \"/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport './app.css';\nconst httpLink = createHttpLink({\n  uri: 'https://graphql.myshopify.com/api/graphql'\n});\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token': 'dd4d4dc146542ba7763305d71d1b3d38'\n  }\n}));\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/anthony/Documents/storefront-api-examples/react-hooks-apollo/pages/_app.js"],"names":["React","ReactDOM","App","ApolloClient","createHttpLink","setContext","InMemoryCache","ApolloProvider","httpLink","uri","middlewareLink","headers","client","link","concat","cache","render","document","getElementById","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAAEK,EAAAA,GAAG,EAAE;AAAP,CAAD,CAA/B;AAEA,MAAMC,cAAc,GAAGL,UAAU,CAAC,OAAO;AACvCM,EAAAA,OAAO,EAAE;AACP,yCAAqC;AAD9B;AAD8B,CAAP,CAAD,CAAjC;AAMA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,EAAAA,IAAI,EAAEH,cAAc,CAACI,MAAf,CAAsBN,QAAtB,CADwB;AAE9BO,EAAAA,KAAK,EAAE,IAAIT,aAAJ;AAFuB,CAAjB,CAAf;AAKAL,QAAQ,CAACe,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAKEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF;;AAQA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,sBAAO,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQF,K;AAIT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport './app.css';\n\nconst httpLink = createHttpLink({ uri: 'https://graphql.myshopify.com/api/graphql' })\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token': 'dd4d4dc146542ba7763305d71d1b3d38'\n  }\n}))\n\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render((\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  ),\n  document.getElementById('root')\n);\n\nfunction MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}