{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthony/Documents/storefront-api-examples/swift_headless_cms/pages/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport Layout from \"../components/Layout\";\nimport Product from '../components/Product';\nimport Cart from '../components/Cart';\nimport CustomerAuthWithMutation from '../components/CustomerAuth';\nimport gql from 'graphql-tag';\nimport { useCheckoutEffect, createCheckout, checkoutLineItemsAdd, checkoutLineItemsUpdate, checkoutLineItemsRemove, checkoutCustomerAssociate } from './checkout';\nconst query = gql`\n  query query {\n    shop {\n      name\n      description\n      products(first:20) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            title\n            options {\n              id\n              name\n              values\n            }\n            variants(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  id\n                  title\n                  selectedOptions {\n                    name\n                    value\n                  }\n                  image {\n                    src\n                  }\n                  price\n                }\n              }\n            }\n            images(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction Home(props) {\n  const {\n    0: isCartOpen,\n    1: setCartOpen\n  } = useState(false);\n  const {\n    0: isNewCustomer,\n    1: setNewCustomer\n  } = useState(false);\n  const {\n    0: isCustomerAuthOpen,\n    1: setCustomerAuthOpen\n  } = useState(false);\n  const {\n    0: showAccountVerificationMessage,\n    1: setAccountVerificationMessage\n  } = useState(false);\n  const {\n    0: checkout,\n    1: setCheckout\n  } = useState({\n    lineItems: {\n      edges: []\n    }\n  });\n  const {\n    0: customerAccessToken,\n    1: setCustomerAccessToken\n  } = useState(null);\n  const [createCheckoutMutation, {\n    data: createCheckoutData,\n    loading: createCheckoutLoading,\n    error: createCheckoutError\n  }] = useMutation(createCheckout);\n  const [lineItemAddMutation, {\n    data: lineItemAddData,\n    loading: lineItemAddLoading,\n    error: lineItemAddError\n  }] = useMutation(checkoutLineItemsAdd);\n  const [lineItemUpdateMutation, {\n    data: lineItemUpdateData,\n    loading: lineItemUpdateLoading,\n    error: lineItemUpdateError\n  }] = useMutation(checkoutLineItemsUpdate);\n  const [lineItemRemoveMutation, {\n    data: lineItemRemoveData,\n    loading: lineItemRemoveLoading,\n    error: lineItemRemoveError\n  }] = useMutation(checkoutLineItemsRemove);\n  const [customerAssociateMutation, {\n    data: customerAssociateData,\n    loading: customerAssociateLoading,\n    error: customerAssociateError\n  }] = useMutation(checkoutCustomerAssociate);\n  const {\n    loading: shopLoading,\n    error: shopError,\n    data: shopData\n  } = useQuery(query);\n  useEffect(() => {\n    const variables = {\n      input: {}\n    };\n    createCheckoutMutation({\n      variables\n    }).then(res => {\n      console.log(res);\n    }, err => {\n      console.log('create checkout error', err);\n    });\n  }, []);\n  useCheckoutEffect(createCheckoutData, 'checkoutCreate', setCheckout);\n  useCheckoutEffect(lineItemAddData, 'checkoutLineItemsAdd', setCheckout);\n  useCheckoutEffect(lineItemUpdateData, 'checkoutLineItemsUpdate', setCheckout);\n  useCheckoutEffect(lineItemRemoveData, 'checkoutLineItemsRemove', setCheckout);\n  useCheckoutEffect(customerAssociateData, 'checkoutCustomerAssociate', setCheckout);\n\n  const handleCartClose = () => {\n    setCartOpen(false);\n  };\n\n  const openCustomerAuth = event => {\n    if (event.target.getAttribute('data-customer-type') === \"new-customer\") {\n      setNewCustomer(true);\n      setCustomerAuthOpen(true);\n    } else {\n      setNewCustomer(false);\n      setCustomerAuthOpen(true);\n    }\n  };\n\n  const accountVerificationMessage = () => {\n    setAccountVerificationMessage(true);\n    setTimeout(() => {\n      setAccountVerificationMessage(false);\n    }, 5000);\n  };\n\n  const closeCustomerAuth = () => {\n    setCustomerAuthOpen(false);\n  };\n\n  const addVariantToCart = (variantId, quantity) => {\n    const variables = {\n      checkoutId: checkout.id,\n      lineItems: [{\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }]\n    }; // TODO replace for each mutation in the checkout thingy. can we export them from there???\n    // create your own custom hook???\n\n    lineItemAddMutation({\n      variables\n    }).then(res => {\n      setCartOpen(true);\n    });\n  };\n\n  const updateLineItemInCart = (lineItemId, quantity) => {\n    const variables = {\n      checkoutId: checkout.id,\n      lineItems: [{\n        id: lineItemId,\n        quantity: parseInt(quantity, 10)\n      }]\n    };\n    lineItemUpdateMutation({\n      variables\n    });\n  };\n\n  const removeLineItemInCart = lineItemId => {\n    const variables = {\n      checkoutId: checkout.id,\n      lineItemIds: [lineItemId]\n    };\n    lineItemRemoveMutation({\n      variables\n    });\n  };\n\n  const associateCustomerCheckout = customerAccessToken => {\n    const variables = {\n      checkoutId: checkout.id,\n      customerAccessToken: customerAccessToken\n    };\n    customerAssociateMutation({\n      variables\n    }).then(res => {\n      setCustomerAuthOpen(false);\n    });\n  };\n\n  if (shopLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (shopError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: shopError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/product\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Product-wrapper\",\n        children: shopData.shop.products.edges.map(product => /*#__PURE__*/_jsxDEV(Product, {\n          addVariantToCart: addVariantToCart,\n          checkout: checkout,\n          product: product.node\n        }, product.node.id.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/anthony/Documents/storefront-api-examples/swift_headless_cms/pages/index.js"],"names":["React","useState","useEffect","useQuery","useMutation","Link","Layout","Product","Cart","CustomerAuthWithMutation","gql","useCheckoutEffect","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","query","Home","props","isCartOpen","setCartOpen","isNewCustomer","setNewCustomer","isCustomerAuthOpen","setCustomerAuthOpen","showAccountVerificationMessage","setAccountVerificationMessage","checkout","setCheckout","lineItems","edges","customerAccessToken","setCustomerAccessToken","createCheckoutMutation","data","createCheckoutData","loading","createCheckoutLoading","error","createCheckoutError","lineItemAddMutation","lineItemAddData","lineItemAddLoading","lineItemAddError","lineItemUpdateMutation","lineItemUpdateData","lineItemUpdateLoading","lineItemUpdateError","lineItemRemoveMutation","lineItemRemoveData","lineItemRemoveLoading","lineItemRemoveError","customerAssociateMutation","customerAssociateData","customerAssociateLoading","customerAssociateError","shopLoading","shopError","shopData","variables","input","then","res","console","log","err","handleCartClose","openCustomerAuth","event","target","getAttribute","accountVerificationMessage","setTimeout","closeCustomerAuth","addVariantToCart","variantId","quantity","checkoutId","id","parseInt","updateLineItemInCart","lineItemId","removeLineItemInCart","lineItemIds","associateCustomerCheckout","message","shop","products","map","product","node","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Link from 'next/link'\nimport Layout from \"../components/Layout\"\nimport Product from '../components/Product';\nimport Cart from '../components/Cart';\nimport CustomerAuthWithMutation from '../components/CustomerAuth';\nimport gql from 'graphql-tag';\nimport {\n  useCheckoutEffect,\n  createCheckout,\n  checkoutLineItemsAdd,\n  checkoutLineItemsUpdate,\n  checkoutLineItemsRemove,\n  checkoutCustomerAssociate,\n} from './checkout';\n\nconst query = gql`\n  query query {\n    shop {\n      name\n      description\n      products(first:20) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            title\n            options {\n              id\n              name\n              values\n            }\n            variants(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  id\n                  title\n                  selectedOptions {\n                    name\n                    value\n                  }\n                  image {\n                    src\n                  }\n                  price\n                }\n              }\n            }\n            images(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction Home(props){\n\n  const [isCartOpen,setCartOpen] = useState(false);\n  const [isNewCustomer,setNewCustomer] = useState(false);\n  const [isCustomerAuthOpen,setCustomerAuthOpen] = useState(false);\n  const [showAccountVerificationMessage,setAccountVerificationMessage] = useState(false);\n  const [checkout,setCheckout] = useState({ lineItems: { edges: [] }});\n\n  const [customerAccessToken, setCustomerAccessToken] = useState(null);\n\n  const [createCheckoutMutation,\n  {\n    data: createCheckoutData,\n    loading: createCheckoutLoading,\n    error: createCheckoutError\n  }] = useMutation(createCheckout);\n\n  const [lineItemAddMutation,\n  {\n    data: lineItemAddData,\n    loading: lineItemAddLoading,\n    error: lineItemAddError\n  }] = useMutation(checkoutLineItemsAdd);\n\n  const [lineItemUpdateMutation,\n  {\n    data: lineItemUpdateData,\n    loading: lineItemUpdateLoading,\n    error: lineItemUpdateError\n  }] = useMutation(checkoutLineItemsUpdate);\n\n  const [lineItemRemoveMutation,\n  {\n    data: lineItemRemoveData,\n    loading: lineItemRemoveLoading,\n    error: lineItemRemoveError\n  }] = useMutation(checkoutLineItemsRemove);\n\n  const [customerAssociateMutation,\n  {\n    data: customerAssociateData,\n    loading: customerAssociateLoading,\n    error: customerAssociateError\n  }] = useMutation(checkoutCustomerAssociate);\n\n  const { loading:shopLoading, error:shopError, data:shopData } = useQuery(query);\n\n  useEffect(() => {\n    const variables = { input: {} };\n    createCheckoutMutation({ variables }).then(\n      res => {\n        console.log( res );\n      },\n      err => {\n        console.log('create checkout error', err );\n      }\n    );\n\n  }, []);\n\n  useCheckoutEffect(createCheckoutData, 'checkoutCreate', setCheckout);\n  useCheckoutEffect(lineItemAddData, 'checkoutLineItemsAdd', setCheckout);\n  useCheckoutEffect(lineItemUpdateData, 'checkoutLineItemsUpdate', setCheckout);\n  useCheckoutEffect(lineItemRemoveData, 'checkoutLineItemsRemove', setCheckout);\n  useCheckoutEffect(customerAssociateData, 'checkoutCustomerAssociate', setCheckout);\n\n  const handleCartClose = () => {\n    setCartOpen( false );\n  };\n\n  const openCustomerAuth = (event) => {\n    if (event.target.getAttribute('data-customer-type') === \"new-customer\") {\n      setNewCustomer( true );\n      setCustomerAuthOpen( true );\n    } else {\n      setNewCustomer( false );\n      setCustomerAuthOpen( true );\n    }\n  };\n\n  const accountVerificationMessage = () => {\n    setAccountVerificationMessage(true)\n    setTimeout(() => {\n      setAccountVerificationMessage(false)\n   }, 5000);\n  };\n\n  const closeCustomerAuth = () => {\n    setCustomerAuthOpen(false);\n  };\n\n  const addVariantToCart = (variantId, quantity) =>{\n    const variables = { checkoutId:checkout.id, lineItems:  [{variantId, quantity: parseInt(quantity, 10)}] };\n    // TODO replace for each mutation in the checkout thingy. can we export them from there???\n    // create your own custom hook???\n\n    lineItemAddMutation({ variables }).then(res => {\n        setCartOpen(true);\n    });\n  };\n\n  const updateLineItemInCart = (lineItemId, quantity) => {\n    const variables = { checkoutId:checkout.id, lineItems: [{id: lineItemId, quantity: parseInt(quantity, 10)}] };\n    lineItemUpdateMutation({ variables });\n  };\n\n  const removeLineItemInCart = (lineItemId) => {\n    const variables = { checkoutId:checkout.id, lineItemIds: [lineItemId] };\n    lineItemRemoveMutation({ variables });\n  };\n\n  const associateCustomerCheckout = (customerAccessToken) => {\n\n    const variables = { checkoutId:checkout.id, customerAccessToken: customerAccessToken };\n    customerAssociateMutation({ variables }).then((res) => {\n      setCustomerAuthOpen(false);\n    });\n  };\n\n  if (shopLoading) {\n    return <p>Loading ...</p>;\n  }\n\n  if (shopError) {\n    return <p>{shopError.message}</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Link href=\"/product\">\n          <a>Product</a>\n        </Link>\n      <Layout>\n        <div className=\"Product-wrapper\">\n          { shopData.shop.products.edges.map(product =>\n            <Product addVariantToCart={addVariantToCart} checkout={checkout} key={product.node.id.toString()} product={product.node} />\n          )}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}